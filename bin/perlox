#!/usr/bin/perl

=encoding utf8
=head1 Brief description

TODO

=cut

use v5.24;
use strict;
use warnings;
use utf8;
use lib::abs '../lib';

use Syntax::Keyword::Match;
use Try::Tiny qw(try catch);
use Readonly qw(Readonly);

use Perlox::Interpreter ();

Readonly::Hash my %EXIT_CODES => (
    OK => 0,
    TOO_MANY_ARGUMENTS => 64,
);

my $interpreter = Perlox::Interpreter->new();

try {
    match (my $args_count = scalar(@ARGV) : ==) {
        case (0) {
            $interpreter->run_repl();
        } case (1) {
            $interpreter->run_from_file($ARGV[0]);
        } case if ($args_count > 1) {
            Perlox::CLI::show_help_message();
            exit($EXIT_CODES{TOO_MANY_ARGUMENTS});
        }
    }
} catch {
    # TODO Reporter module or smth similar
    match ($_ : isa) {
        case (Perlox::Interpreter::FileReadException) {
            say($_->error());
        } case (Perlox::Interpreter::Scanner::UnexpectedCharacterException) {
            say(sprintf(
                '%s, at line %d, column: %d',
                $_->error(), $_->line(), $_->column(),
            ));
        }
    }
};

1;